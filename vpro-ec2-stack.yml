---
- name: Setup vVprofile stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup Variable
      include_vars: vars/vpc-output_vars
    
    - name: Import vprofile setup Variable 
      include_vars: vars/vprostacksetup

    - name: create vprofile ec2 key
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out

    - name: save private key into file loginkye_vpro.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./loginkey_vpro.pem"
        mode: 0600
      when: vprokey_out.changed
    
    - name: create security group for load balancer
      ec2_group:
        name: vproELB-sg
        description: Allow port 80 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out
    
    - name: create security froup for Vprofile stack
      ec2_group:
        name: vproStack-sg
        description: Allow post 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules: 
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
      register: vproStack_sg_out

    - name: create security froup for Vprofile stack
      ec2_group:
        name: vproStack-sg
        description: Allow post 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules: 
          - proto: all
            group_id: "{{vproELBSG_out.group_id}}"
    

    - name: Creating Bastion Host
      amazon.aws.ec2_instance:
        name: vprofile-ansible-ec2
        key_name: vprokey
        region: "{{region}}"
        instance_type: t3.micro
        image_id: "{{bastion_ami}}"
        wait: yes
        wait_timeout: 300
        exact_count: 1
        tags:
          Name: "Bastion_host"
          Project: Vprofile
          Owner: Devops Team
        security_group: "{{vproStack_sg_out.group_id}}"
        vpc_subnet_id: "{{pubsub1id}}"
      register: bastionHost_out

    - name: insert/update "BastionSGid" in varss/vpc-output_vars
      blockinfile:
        path: vars/vpc-output_vars
        backup: yes
        block: |
          BastionSGid: {{vproStack_sg_out.group_id}}
    
    - name: Creating Nginx web01
      amazon.aws.ec2_instance:
        name: web01
        key_name: vprokey
        region: "{{region}}"
        instance_type: t3.micro
        image_id: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        exact_count: 1
        tags:
          Name: "web01"
          Project: Vprofile
          Owner: Devops Team
        security_group: "{{vproStack_sg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out

    - name: Creating tomcat app01
      amazon.aws.ec2_instance:
        name: app01
        key_name: vprokey
        region: "{{region}}"
        instance_type: t3.micro
        image_id: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        exact_count: 1
        tags:
          Name: "app01"
          Project: Vprofile
          Owner: Devops Team
        security_group: "{{vproStack_sg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out

    - name: Creating memcache mc01
      amazon.aws.ec2_instance:
        name: mc01
        key_name: vprokey
        region: "{{region}}"
        instance_type: t3.micro
        image_id: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        exact_count: 1
        tags:
          Name: "mc01"
          Project: Vprofile
          Owner: Devops Team
        security_group: "{{vproStack_sg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out

    - name: Creating RabbitMQ rmq01
      amazon.aws.ec2_instance:
        name: rmq01
        key_name: vprokey
        region: "{{region}}"
        instance_type: t3.micro
        image_id: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        exact_count: 1
        tags:
          Name: "rmq01"
          Project: Vprofile
          Owner: Devops Team
        security_group: "{{vproStack_sg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out

    - name: Creating Mysql db01
      amazon.aws.ec2_instance:
        name: db01
        key_name: vprokey
        region: "{{region}}"
        instance_type: t3.micro
        image_id: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        exact_count: 1
        tags:
          Name: "db01"
          Project: Vprofile
          Owner: Devops Team
        security_group: "{{vproStack_sg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out
      
    - debug:
        var: db01_out.instances[0].network_interfaces[0].private_ip_address

    - local_action:
        module: ec2_elb_lb
        name: "vprofile-elb"
        region: "{{region}}"
        state: present
        instance_ids:
          - "{{web01_out.instances[0].instance_id}}"
        purge_instance_ids: true
        security_group_ids: "{{vproELBSG_out.group_id}}"
        subnets:
          - "{{pubsub1id}}"
          - "{{pubsub2id}}"
          - "{{pubsub3id}}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
    - name: Insert/Update Hosts IP & Name in file provision-stack/group_vars/hostsip
      blockinfile:
        path: provision-stack/group_vars/hostsip
        block: |
          web01_ip: {{web01_out.instances[0].network_interfaces[0].private_ip_address}}
          app01_ip: {{app01_out.instances[0].network_interfaces[0].private_ip_address}}
          rmq01_ip: {{app01_out.instances[0].network_interfaces[0].private_ip_address}}
          mc01_ip: {{rmq01_out.instances[0].network_interfaces[0].private_ip_address}}
          db01_ip: {{db01_out.instances[0].network_interfaces[0].private_ip_address}}

    - name: copy login key to provision_stack directory
      copy:
        src: loginkey_vpro.pem
        dest: provision-stack/loginkey_vpro.pem
        mode: '0400'

    - name: Insert/Update Hosts IP & Name in file provision-stack/group_vars/hostsip
      blockinfile:
        path: provision-stack/inventory-vpro
        block: |
          web01 ansible_host= {{web01_out.instances[0].network_interfaces[0].private_ip_address}}
          app01 ansible_host= {{app01_out.instances[0].network_interfaces[0].private_ip_address}}
          rmq01 ansible_host= {{app01_out.instances[0].network_interfaces[0].private_ip_address}}
          mc01 ansible_host= {{rmq01_out.instances[0].network_interfaces[0].private_ip_address}}
          db01 ansible_host= {{db01_out.instances[0].network_interfaces[0].private_ip_address}}
          cntl ansible_host= 127.0.0.1 ansible_connection=local

          [websrvgrp]
          web01

          [appsrvgrp]
          app01

          [rmqsrvgrp]
          rmq01

          [mcsrvgrp]
          mc01

          [dbsrvgrp]
          db01

          [control]
          cntl

          [stack_inst:children]
          websrvgrp
          appsrvgrp
          rmqsrvgrp
          mcsrvgrp
          dbsrvgrp

          [stack_inst:vars]
          ansible_user=ubuntu
          ansible_ssh_private_key_file=loginkey_vpro.pem
          #ansible_python_interpreter=/usr/bin/python3

